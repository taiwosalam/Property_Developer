"use client";

import Head from "next/head";
import "@/styles/mobile.css";
import "@/styles/globals.css";

// Imports
import { Toaster } from "sonner";
import { primaryFont } from "@/utils/fonts";
import ThemeProvider from "./theme-provider";
import { useRouter } from "next/navigation";
import { useEffect } from "react";
import { getToken } from "@/utils/cookies";
import { useAuthStoreSelectors } from "@/store/authstrore";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const router = useRouter();
  const { isAuthenticated } = useAuthStoreSelectors.getState();

  useEffect(() => {
    // Function to handle redirect based on authentication state
    const handleRedirect = async () => {
      const accessToken = await getToken(); // Retrieve token from cookies/localStorage

      if (isAuthenticated) {
        router.push("/dashboard"); // Redirect to dashboard if authenticated
      } else if (accessToken) {
        return; // Do nothing if token is present but not authenticated
      }
    };

    handleRedirect(); // Call the function on component mount
  }, [isAuthenticated, router]); // Re-run this logic if isAuthenticated changes

  return (
    <html lang="en" suppressHydrationWarning>
      <Head>
        <meta charSet="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="description" content="Generated by create next app" />
        <title>Create Next app</title>
      </Head>
      <body
        className={`${primaryFont.className} antialiased`}
        suppressHydrationWarning
      >
        <ThemeProvider />
        <div className="w-full relative z-[1]">
          {children}
          <Toaster
            richColors
            className={`${primaryFont.className} antialiased`}
            position="top-right"
            duration={5000}
          />
        </div>
        <div id="portal" className="z-[2]"></div>
      </body>
    </html>
  );
}
