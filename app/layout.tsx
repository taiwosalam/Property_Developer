"use client";
import Head from "next/head";
import { useRouter } from "next/navigation";
import "@/styles/globals.css";

// Imports
import { Toaster } from "sonner";
import { primaryFont } from "@/utils/fonts";
import ThemeProvider from "./theme-provider";
import { Theme } from "@/components/theme";
import { useAuthStore } from "@/store/authStore";
import { useEffect, useState } from "react";
import { getLocalStorage } from "@/utils/local-storage";
import { getUserProfile } from "./(onboarding)/auth/data";

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const router = useRouter();
  const authToken = getLocalStorage("authToken");
  const setToken = useAuthStore((state) => state.setToken);
  const [isAuthChecking, setIsAuthChecking] = useState(true);

  useEffect(() => {
    const checkAuth = async () => {
      if (!authToken) {
        router.replace("/auth/sign-in");
      } else {
        setToken(authToken);
        setTimeout(async () => {
          const status = await getUserProfile();
          if (status === "redirect to verify email") {
            router.replace("/auth/sign-up");
          }
          if (status === "redirect to setup") {
            router.replace("/setup");
          }
          if (status === "redirect to sign in") {
            router.replace("/auth/sign-in");
          }
        }, 0);
      }
      setIsAuthChecking(false);
    };
    checkAuth();
  }, [router, setToken, authToken]);

  // Show nothing while checking auth
  if (isAuthChecking) {
    return null;
  }

  return (
    <html lang="en">
      <Head>
        <meta charSet="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="description" content="Generated by create next app" />
        <title>Create Next app</title>
      </Head>
      <body
        className={`${primaryFont.className} antialiased`}
        suppressHydrationWarning
      >
        <Theme
          attribute="class"
          defaultTheme="light"
          enableSystem
          disableTransitionOnChange
        >
          <ThemeProvider />
          <div className="w-full relative z-[1]">{children}</div>
          <div id="portal" className="z-[2]">
            <Toaster
              richColors
              className={`${primaryFont.className} antialiased z-[1000]`}
              position="top-right"
              duration={5000}
            />
          </div>
        </Theme>
      </body>
    </html>
  );
}
