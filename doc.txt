// "use client";

// import Link from "next/link";

// // Types
// import type { NavCreateNewColumnProps } from "./types";

// // Imports
// import SVG from "../SVG/svg";
// import { useModal } from "../Modal/modal";
// import useDarkMode from "@/hooks/useCheckDarkMode";
// import { toast } from "sonner";
// import { unavailableFeatures } from "./nav-create-new-items";

// const NavCreateNewColumn: React.FC<NavCreateNewColumnProps> = ({
//   data = [],
//   handleModalTrigger,
// }) => {
//   const { setIsOpen } = useModal();
//   const isDarkMode = useDarkMode();

//   // const options = ["management", "tasks", "accounting", "documents"];
//   const options = ["management", "tasks", "accounting", "documents"];
//   const content = data.filter((item) =>
//     options.includes(item.label.toLowerCase())
//   );
//   const class_styles = "flex items-center gap-4";
//   const icon = (
//     <SVG
//       type="horizontal_line"
//       className="w-[30px] flex justify-center"
//       color={isDarkMode ? "#fff" : "#050901"}
//     />
//   );

//   const closeCreateNewModal = () => {
//     setIsOpen(false);
//   };

//   // Handler to check if feature is available before triggering action
//   const handleAction = (label: string, action: () => void) => {
//     if (unavailableFeatures.includes(label.toLowerCase())) {
//       toast.warning(`${label} feature is not available yet. Coming soon!`);
//     } else {
//       action();
//     }
//   };

//   return (
//     <div className="flex gap-10 w-full overflow-auto custom-round-scrollbar">
//       {content.map(({ type, label, content }, index) => (
//         <div key={index} className="custom-flex-col text-base font-medium">
//           <div className="flex items-center gap-2">
//             <SVG
//               type={type}
//               color={isDarkMode ? "#fff" : "#050901"}
//               className="w-[30px] flex justify-center"
//             />
//             <p className="text-text-primary dark:text-white capitalize">
//               {label}
//             </p>
//           </div>
//           {content?.map(({ label, link, modal }, idx) => (
//             <div key={idx} className="py-3 px-5">
//               {link ? (
//                 <Link
//                   href={link}
//                   className={class_styles}
//                   onClick={(e) => {
//                     handleAction(label, () => {
//                       closeCreateNewModal();
//                     });
//                     if (unavailableFeatures.includes(label.toLowerCase())) {
//                       e.preventDefault();
//                     }
//                   }}
//                   // onClick={closeCreateNewModal}
//                 >
//                   {icon}
//                   <p className="text-text-secondary dark:text-darkText-1 capitalize">
//                     {label}
//                   </p>
//                 </Link>
//               ) : (
//                 <button
//                   type="button"
//                   className={class_styles}
//                   onClick={() =>
//                     handleAction(label, () => handleModalTrigger(modal))
//                   }
//                   // onClick={() => handleModalTrigger(modal)}
//                 >
//                   {icon}
//                   <p className="text-text-secondary dark:text-darkText-1 capitalize">
//                     {label}
//                   </p>
//                 </button>
//               )}
//             </div>
//           ))}
//         </div>
//       ))}
//     </div>
//   );
// };

// export default NavCreateNewColumn;
