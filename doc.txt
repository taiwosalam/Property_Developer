 {/* NOTE: BACKEND CAN'T ACCEPT MULTIPLE AMOUNT AND TITLE FOR INVOICE */}
      <div className="space-y-6">
        <div className="flex gap-1 flex-col">
          <div className="flex gap-2">
            <h3 className="text-[#092C4C] font-bold text-xl dark:text-white">
              Add Payment
            </h3>
            {/* <Checkbox
              radio
              checked={isAddPaymentChecked}
              onChange={() => setIsAddPaymentChecked(true)}
            /> */}
          </div>
          <p>
            Choose to create a manual payment for a specific bill or set it to
            auto-payment for a designated period.
          </p>
        </div>
        {/* {isAddPaymentChecked && ( */}
        <div className="bg-white dark:bg-darkText-primary rounded-[8px] space-y-4 p-6">
          <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
            <Input
              type="text"
              id="payment_title"
              label="Payment Title"
              value={paymentTitle}
              onChange={(value) => setPaymentTitle(value as string)}
            />
            <Input
              type="text"
              id="amount"
              label="Amount"
              className="w-full"
              CURRENCY_SYMBOL={"₦"}
              formatNumber
              value={paymentAmount}
              onChange={(value) => setPaymentAmount(value as string)}
            />
          </div>
          <div className="flex items-center justify-end">
            <Button
              size="base_medium"
              className="py-2 px-8"
              onClick={handleAddPaymentClick}
            >
              Add
            </Button>
          </div>
        </div>
        {/* )} */}
      </div>


      {/* <div className="space-y-6">
        <div className="flex gap-1 flex-col">
          <div className="flex gap-2">
            <h3 className="text-[#092C4C] font-bold text-xl dark:text-white">
              Generated Rent Breakdown
            </h3>
            <Checkbox
              disabled={isSelectDisabled}
              radio
              checked={!isAddPaymentChecked}
              onChange={() => setIsAddPaymentChecked(false)}
            />
          </div>
          <p>
            Select to create a pending payment for tenants/occupants to pay
            their renewal fees.
          </p>
        </div>
        {!isAddPaymentChecked && <Breakdown />}
      </div> */}

      {payments.length > 0 && (
        <div className="space-y-6">
          <h3 className="text-[#092C4C] font-bold text-xl dark:text-white">
            Payment Added
          </h3>

          <div className="flex bg-white dark:bg-darkText-primary w-full p-6 rounded-lg flex-col gap-8">
            <div className="w-full max-w-[968px] grid sm:grid-cols-2 lg:grid-cols-3 gap-x-[34px] gap-y-6">
              {payments.map((payment, index) => (
                <div key={index} className="flex flex-col gap-4">
                  <p className="font-medium text-[16px] text-text-tertiary dark:darkText-1 capitalize">
                    {payment.title}
                  </p>
                  <div className="flex items-center gap-2">
                    <p className="font-bold text-[14px] text-text-secondary dark:text-darkText-2">
                      {new Intl.NumberFormat("en-NG", {
                        style: "currency",
                        currency: "NGN",
                      }).format(payment.amount)}
                    </p>
                    <Modal>
                      <ModalTrigger aria-label={`Delete ${payment.title}`}>
                        <DeleteIconX />
                      </ModalTrigger>
                      <ModalContent>
                        <DeleteItemWarningModal
                          item={payment.title}
                          amount={payment.amount}
                          handleDelete={() => handleDeletePayment(index)}
                          useCase="invoices"
                        />
                      </ModalContent>
                    </Modal>
                  </div>
                </div>
              ))}
            </div>
            <SectionSeparator />
            <div className="flex flex-col gap-4">
              <p className="font-medium text-[16px] text-text-tertiary dark:darkText-1">
                Total Added Payment
              </p>
              <p className="font-bold text-xl text-brand-9">
                {new Intl.NumberFormat("en-NG", {
                  style: "currency",
                  currency: "NGN",
                }).format(totalAmount)}
              </p>
            </div>
          </div>
        </div>
      )}

      {/* <div className="space-y-4 text-[#3F4247] text-sm dark:text-darkText-1">
        <div className="flex gap-4">
          {["Notification", "SMS Alert", "Email Alert"].map((option) => (
            <Checkbox sm key={option} defaultChecked>
              {option}
            </Checkbox>
          ))}
        </div>
        <p>
          Payment will be reflected on the receipt page once the selected client
          makes a payment for this generated invoice
        </p>
      </div> */}