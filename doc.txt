// interface SelectPlanButtonProps {
//   isFree?: boolean;
//   price: string;
//   planTitle: string;
//   onSelectPlan?: () => Promise<boolean | undefined>;
//   onSelect?: () => void;
//   page?: "modal" | "settings";
//   changeStep?: (step: FormSteps | number) => void;
//   hovered?: boolean;
// }

// export const SelectPlanButton: React.FC<SelectPlanButtonProps> = ({
//   isFree = false,
//   price,
//   planTitle,
//   onSelectPlan,
//   onSelect,
//   page,
//   changeStep,
//   hovered,
// }) => {
//   const subCost = parseFormattedNumber(price);
//   const currentPlan = usePersonalInfoStore((state) => state.currentPlan);
//   const currentExpiryDate = usePersonalInfoStore(
//     (state) => state.currentExpiryDate
//   );

//   const isExpired = currentExpiryDate
//     ? dayjs(currentExpiryDate).isSameOrBefore(dayjs(), "day")
//     : false;

//   const currentPlanKeyword = currentPlan?.split(" ")[0]?.toLowerCase();
//   const thisPlanKeyword = planTitle?.split(" ")[0]?.toLowerCase();
//   const isCurrentPlan = currentPlanKeyword === thisPlanKeyword;

//   console.log("currentPlanKeyword", currentPlanKeyword);

//   // Determine button text based on plan context
//   const buttonText = (() => {
//     if (isCurrentPlan) {
//       if (currentPlanKeyword === "free") return "Current Plan";
//       return "Extend Plan"; // For Basic or Premium, if it's the current plan
//     }
//     if (currentPlanKeyword === "free") {
//       return "Upgrade Plan"; // Free plan users see "Upgrade" for Basic/Premium
//     }
//     if (currentPlanKeyword === "basic" && thisPlanKeyword === "premium") {
//       return "Upgrade Plan"; // Basic plan users see "Upgrade" for Premium
//     }
//     if (currentPlanKeyword === "premium") {
//       return thisPlanKeyword === "premium" ? "Extend Plan" : "Basic Plan"; // Premium users see "Extend" for Premium, "Basic Plan" for others
//     }
//     return "Select Plan"; // Fallback
//   })();

//   // Determine if the button should have an action
//   const hasAction = (() => {
//     if (isFree && isCurrentPlan) return false; // No action for free plan when current
//     if (currentPlanKeyword === "premium" && thisPlanKeyword === "basic") {
//       return false; // No action for Premium-to-Basic downgrade
//     }
//     return true; // Action for upgrades or extending plans
//   })();

//   // Determine if the modal should be used (only for actionable cases when not in modal page)
//   const useModal = page !== "modal" && hasAction && !isFree;

//   const notMessage = buttonText === "Extend Plan";

//   const handleSelectPlan = async () => {
//     if (page === "modal" && changeStep) {
//       await onSelectPlan?.();
//       window.dispatchEvent(new Event("refetchSubscriptionPlan"));
//       window.dispatchEvent(new Event("refetchEnrollments"));
//       // window.location.reload();
//       changeStep(3);
//     } else if (!useModal && hasAction) {
//       await onSelect?.(); // Direct action for non-modal actionable scenarios
//       // window.location.reload();
//       window.dispatchEvent(new Event("refetchSubscriptionPlan"));
//       window.dispatchEvent(new Event("refetchEnrollments"));
//     }
//   };

//   const isDowngradeBlocked =
//     (currentPlanKeyword === "professional" &&
//       (thisPlanKeyword === "premium" || thisPlanKeyword === "basic")) ||
//     (currentPlanKeyword === "premium" && thisPlanKeyword === "basic");

//   const displayText =
//     isDowngradeBlocked && hovered
//       ? "Plan cannot be downgraded"
//       : isExpired && hovered && isCurrentPlan
//       ? "Renew Plan"
//       : !hovered && isCurrentPlan
//       ? "Current Plan"
//       : buttonText;

//   return (
//     <div className="px-6 pb-4 flex justify-end">
//       <div
//         className={`buynowbtn w-full flex items-center justify-center p-[8px] gap-[10px] rounded-[4px] ${
//           isFree ? "bg-brand-9 bg-opacity-40" : "bg-brand-9"
//         }`}
//       >
//         {page === "modal" ? (
//           <button
//             className="text-center text-[14px] w-full text-white font-medium tracking-[0px]"
//             onClick={hasAction ? handleSelectPlan : undefined} // No action for non-actionable cases
//           >
//             {displayText}
//           </button>
//         ) : useModal ? (
//           <Modal>
//             <ModalTrigger asChild className="w-full text-white">
//               <button
//                 className="text-center text-[14px] w-full text-white font-medium tracking-[0px]"
//                 onClick={handleSelectPlan}
//               >
//                 {displayText}
//               </button>
//             </ModalTrigger>
//             <ModalContent>
//               <SponsorModal
//                 page="subscription"
//                 count={10}
//                 cost={subCost ?? 0}
//                 message={!notMessage}
//                 onSubmit={onSelectPlan}
//                 onSelect={onSelect}
//               />
//             </ModalContent>
//           </Modal>
//         ) : (
//           <button
//             className="text-center text-[14px] w-full text-white font-medium tracking-[0px]"
//             onClick={hasAction ? handleSelectPlan : undefined} // No action for non-actionable cases
//           >
//             {displayText}
//           </button>
//         )}
//       </div>
//     </div>
//   );
// };



